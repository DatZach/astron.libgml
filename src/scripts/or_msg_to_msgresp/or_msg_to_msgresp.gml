/// @func or_msg_to_msgresp(msg);
/// Map message type to response message type
/// @param msg real
/// @returns real

gml_pragma("gmlinline");

switch (argument0) {
    case STATESERVER_OBJECT_GET_FIELD        : return STATESERVER_OBJECT_GET_FIELD_RESP;
    case STATESERVER_OBJECT_GET_FIELDS       : return STATESERVER_OBJECT_GET_FIELDS_RESP;
    case STATESERVER_OBJECT_GET_ALL          : return STATESERVER_OBJECT_GET_ALL_RESP;
    case STATESERVER_OBJECT_GET_LOCATION     : return STATESERVER_OBJECT_GET_LOCATION_RESP;
    case STATESERVER_OBJECT_GET_AI           : return STATESERVER_OBJECT_GET_AI_RESP;
    case STATESERVER_OBJECT_GET_OWNER        : return STATESERVER_OBJECT_GET_OWNER_RESP;
    case STATESERVER_OBJECT_GET_ZONE_COUNT   : return STATESERVER_OBJECT_GET_ZONE_COUNT_RESP;
    case STATESERVER_OBJECT_GET_ZONES_COUNT  : return STATESERVER_OBJECT_GET_ZONES_COUNT_RESP;
    case STATESERVER_OBJECT_GET_CHILD_COUNT  : return STATESERVER_OBJECT_GET_CHILD_COUNT_RESP;
    case DBSS_OBJECT_GET_ACTIVATED           : return DBSS_OBJECT_GET_ACTIVATED_RESP;
    case DBSERVER_CREATE_OBJECT              : return DBSERVER_CREATE_OBJECT_RESP;
    case DBSERVER_OBJECT_GET_FIELD           : return DBSERVER_OBJECT_GET_FIELD_RESP;
    case DBSERVER_OBJECT_GET_FIELDS          : return DBSERVER_OBJECT_GET_FIELDS_RESP;
    case DBSERVER_OBJECT_GET_ALL             : return DBSERVER_OBJECT_GET_ALL_RESP;
    case DBSERVER_OBJECT_SET_FIELD_IF_EQUALS : return DBSERVER_OBJECT_SET_FIELD_IF_EQUALS_RESP;
    case DBSERVER_OBJECT_SET_FIELDS_IF_EQUALS: return DBSERVER_OBJECT_SET_FIELDS_IF_EQUALS_RESP;
    case DBSERVER_OBJECT_SET_FIELD_IF_EMPTY  : return DBSERVER_OBJECT_SET_FIELD_IF_EMPTY_RESP;
}

show_error("Key (" + string(argument0) + ") does not exist in map", true);
